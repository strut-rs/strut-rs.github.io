"use strict";(self.webpackChunkstrut_home=self.webpackChunkstrut_home||[]).push([[509],{4979:(e,t,n)=>{n.d(t,{A:()=>i});const i={terminal:"terminal_qOWF",terminalMdx:"terminalMdx_tbcW",terminalHeader:"terminalHeader_Erup",terminalBtn:"terminalBtn_G3X1",terminalButtonRed:"terminalButtonRed_CB9z",terminalButtonYellow:"terminalButtonYellow_eB6W",terminalButtonGreen:"terminalButtonGreen_wGzb",terminalCodeBlock:"terminalCodeBlock_NNOA",terminalWrap:"terminalWrap_Ids7",terminalNoWrap:"terminalNoWrap_hrPT",sizeXs:"sizeXs_JyAu",sizeS:"sizeS_LYF2",sizeL:"sizeL_A9kf",sizeXl:"sizeXl_W3OZ",progKeyword:"progKeyword_veuK",progString:"progString_N52q",progLiteral:"progLiteral_aAYv",progFunction:"progFunction_IM5g",progDefinition:"progDefinition_jqib",progProperty:"progProperty_cB7y",progVariable:"progVariable_KO31",progOperator:"progOperator_DaRU",progSpecial:"progSpecial_iz7p",progParameter:"progParameter_Hrif",progPunctuation:"progPunctuation_Txy2",progComment:"progComment_wCOw",markupTag:"markupTag_GcCE",markupName:"markupName_Ei4v",markupAttribute:"markupAttribute_TOT_",markupValue:"markupValue_aokd",markupEntity:"markupEntity_lCOK",markupComment:"markupComment_Cx20",shellPrompt:"shellPrompt_AC8G",shellCommand:"shellCommand_JB_O",shellArgument:"shellArgument_jSJP",shellOption:"shellOption_THMd",shellString:"shellString_vE9B",shellVariable:"shellVariable_VrBQ",shellOperator:"shellOperator_ZXpJ",shellOutput:"shellOutput_YSZD",shellComment:"shellComment_AFmW",logTrace:"logTrace_VfDs",logDebug:"logDebug_T8jA",logInfo:"logInfo_IZk8",logNotice:"logNotice_ajLG",logSuccess:"logSuccess_YMZA",logWarning:"logWarning_EWE8",logError:"logError_giiO",logFatal:"logFatal_ca5A",logMain:"logMain_M6kn",logMuted:"logMuted_qreO",logSubdued:"logSubdued_DoyT"}},6445:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>c,default:()=>h,frontMatter:()=>l,metadata:()=>i,toc:()=>p});const i=JSON.parse('{"id":"custom/index","title":"Integrations","description":"[this-example-heartbeat]: #example-heartbeat","source":"@site/docs/07_custom/index.mdx","sourceDirName":"07_custom","slug":"/custom","permalink":"/docs/custom","draft":false,"unlisted":false,"editUrl":"https://github.com/strut-rs/strut-rs.github.io/edit/main/docs/07_custom/index.mdx","tags":[],"version":"current","sidebarPosition":7,"frontMatter":{"sidebar_position":7,"slug":"/custom","title":"Integrations"},"sidebar":"docs","previous":{"title":"Sentry","permalink":"/docs/components/sentry"}}');var r=n(4848),s=n(8453),o=n(7077),a=n(8376);const l={sidebar_position:7,slug:"/custom",title:"Integrations"},c="Custom integrations",d={},p=[{value:"Example: Heartbeat",id:"example-heartbeat",level:2},{value:"Configuration",id:"configuration",level:3},{value:"Startup",id:"startup",level:3},{value:"Spindown",id:"spindown",level:3},{value:"Main function",id:"main-function",level:3}];function u(e){const t={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,s.R)(),...e.components},{Details:n}=t;return n||m("Details",!0),a.tG||m("Log",!1),a.tG.Info||m("Log.Info",!0),a.tG.Main||m("Log.Main",!0),a.tG.Muted||m("Log.Muted",!0),a.$f||m("Shell",!1),a.$f.Argument||m("Shell.Argument",!0),a.$f.Command||m("Shell.Command",!0),a.$f.Prompt||m("Shell.Prompt",!0),(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.header,{children:(0,r.jsx)(t.h1,{id:"custom-integrations",children:"Custom integrations"})}),"\n",(0,r.jsxs)(t.p,{children:["Strut\u2019s core mechanisms used by its ",(0,r.jsx)(t.a,{href:"/docs/components",children:"components"})," are also exposed to client code:"]}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.a,{href:"https://docs.rs/strut/latest/strut/struct.AppConfig.html",children:(0,r.jsx)(t.code,{children:"AppConfig"})})," supports arbitrary configuration."]}),"\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.a,{href:"https://docs.rs/strut/latest/strut/struct.AppContext.html",children:(0,r.jsx)(t.code,{children:"AppContext"})})," provides a central reference for the application\u2019s \u201cliveness\u201d state (whether shutdown is imminent)."]}),"\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.a,{href:"https://docs.rs/strut/latest/strut/struct.AppSpindown.html",children:(0,r.jsx)(t.code,{children:"AppSpindown"})})," issues \u201cwait-for-me-at-shutdown\u201d tokens, which enable pre-shutdown logic (e.g., cleanup)."]}),"\n"]}),"\n",(0,r.jsx)(t.p,{children:"Let\u2019s exemplify how to integrate with Strut."}),"\n",(0,r.jsx)(t.h2,{id:"example-heartbeat",children:"Example: Heartbeat"}),"\n",(0,r.jsx)(t.p,{children:"We\u2019ll implement a heartbeat component that produces \u201ctick\u201d events at configurable intervals.\nWhen shutdown is imminent, it echoes the total uptime before exiting."}),"\n",(0,r.jsxs)(o.A,{width:"95%",wrap:!1,fontSize:"0.75em",children:[(0,r.jsx)(a.$f.Prompt,{children:"$"})," ",(0,r.jsx)(a.$f.Command,{children:"cargo"})," ",(0,r.jsx)(a.$f.Argument,{children:"run"}),"\n",(0,r.jsx)(a.tG.Muted,{children:"1969-10-29T22:30:48.239628Z"}),"  ",(0,r.jsx)(a.tG.Info,{children:"INFO"})," ",(0,r.jsx)(a.tG.Main,{children:"ThreadId(01)"})," ",(0,r.jsx)(a.tG.Muted,{children:"strut::launchpad::wiring::preflight:"})," ",(0,r.jsx)(a.tG.Main,{children:"Starting app with profile 'dev' (default replica, lifetime ID 'oqq-mnss-yfw')"}),"\n",(0,r.jsx)(a.tG.Muted,{children:"1969-10-29T22:30:51.241940Z"}),"  ",(0,r.jsx)(a.tG.Info,{children:"INFO"})," ",(0,r.jsx)(a.tG.Main,{children:"ThreadId(05)"})," ",(0,r.jsx)(a.tG.Muted,{children:"heartbeat-demo:"})," ",(0,r.jsx)(a.tG.Main,{children:"Tick 0"}),"\n",(0,r.jsx)(a.tG.Muted,{children:"1969-10-29T22:30:54.243332Z"}),"  ",(0,r.jsx)(a.tG.Info,{children:"INFO"})," ",(0,r.jsx)(a.tG.Main,{children:"ThreadId(05)"})," ",(0,r.jsx)(a.tG.Muted,{children:"heartbeat-demo:"})," ",(0,r.jsx)(a.tG.Main,{children:"Tick 1"}),"\n",(0,r.jsx)(a.tG.Muted,{children:"1969-10-29T22:30:57.245996Z"}),"  ",(0,r.jsx)(a.tG.Info,{children:"INFO"})," ",(0,r.jsx)(a.tG.Main,{children:"ThreadId(05)"})," ",(0,r.jsx)(a.tG.Muted,{children:"heartbeat-demo:"})," ",(0,r.jsx)(a.tG.Main,{children:"Tick 2"}),"\n",(0,r.jsx)(a.tG.Muted,{children:"1969-10-29T22:30:58.242312Z"}),"  ",(0,r.jsx)(a.tG.Info,{children:"INFO"})," ",(0,r.jsx)(a.tG.Main,{children:"ThreadId(01)"})," ",(0,r.jsx)(a.tG.Muted,{children:"strut_core::context:"})," ",(0,r.jsx)(a.tG.Main,{children:"Terminating application context"}),"\n",(0,r.jsx)(a.tG.Muted,{children:"1969-10-29T22:30:58.242397Z"}),"  ",(0,r.jsx)(a.tG.Info,{children:"INFO"})," ",(0,r.jsx)(a.tG.Main,{children:"ThreadId(01)"})," ",(0,r.jsx)(a.tG.Muted,{children:"strut_core::spindown::registry:"})," ",(0,r.jsx)(a.tG.Main,{children:"Spindown initiated"}),"\n",(0,r.jsx)(a.tG.Muted,{children:"1969-10-29T22:30:58.242439Z"}),"  ",(0,r.jsx)(a.tG.Info,{children:"INFO"})," ",(0,r.jsx)(a.tG.Main,{children:"ThreadId(05)"})," ",(0,r.jsx)(a.tG.Muted,{children:"heartbeat-demo:"})," ",(0,r.jsx)(a.tG.Main,{children:"Total uptime: 10 seconds"}),"\n",(0,r.jsx)(a.tG.Muted,{children:"1969-10-29T22:30:58.242492Z"}),"  ",(0,r.jsx)(a.tG.Info,{children:"INFO"})," ",(0,r.jsx)(a.tG.Main,{children:"ThreadId(01)"})," ",(0,r.jsx)(a.tG.Muted,{children:"strut_core::spindown::registry:"})," ",(0,r.jsx)(a.tG.Main,{children:"Waiting for 1 registered workload(s) to complete"}),"\n",(0,r.jsx)(a.tG.Muted,{children:"1969-10-29T22:30:58.242550Z"}),"  ",(0,r.jsx)(a.tG.Info,{children:"INFO"})," ",(0,r.jsx)(a.tG.Main,{children:"ThreadId(01)"})," ",(0,r.jsx)(a.tG.Muted,{children:"strut_core::spindown::registry:"})," ",(0,r.jsxs)(a.tG.Main,{children:["Completed gracefully ",(0,r.jsx)("em",{children:"workload"}),'="heartbeat"']}),"\n",(0,r.jsx)(a.tG.Muted,{children:"1969-10-29T22:30:58.242571Z"}),"  ",(0,r.jsx)(a.tG.Info,{children:"INFO"})," ",(0,r.jsx)(a.tG.Main,{children:"ThreadId(01)"})," ",(0,r.jsx)(a.tG.Muted,{children:"strut_core::spindown::registry:"})," ",(0,r.jsx)(a.tG.Main,{children:"All workloads completed gracefully"}),"\n",(0,r.jsx)(a.tG.Muted,{children:"1969-10-29T22:30:58.242588Z"}),"  ",(0,r.jsx)(a.tG.Info,{children:"INFO"})," ",(0,r.jsx)(a.tG.Main,{children:"ThreadId(01)"})," ",(0,r.jsx)(a.tG.Muted,{children:"strut_core::spindown::registry:"})," ",(0,r.jsx)(a.tG.Main,{children:"Spindown completed"})]}),"\n",(0,r.jsx)(t.h3,{id:"configuration",children:"Configuration"}),"\n",(0,r.jsx)(t.p,{children:"Write a configuration struct that customizes the heartbeat period:"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-rust",children:"struct HeartbeatConfig {\n    period_secs: u64,\n}\n"})}),"\n",(0,r.jsxs)(t.p,{children:["To make it work, we need to implement ",(0,r.jsx)(t.code,{children:"Default"})," and ",(0,r.jsx)(t.code,{children:"serde::Deserialize"})," on it.\nThe struct also cannot have any reference-type fields (to satisfy ",(0,r.jsx)(t.code,{children:"serde::de::DeserializeOwned"}),")."]}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-rust",children:"use serde::Deserialize;\n\n/// Configuration struct that implements [`Default`] and [`Deserialize`].\n#[derive(Debug, Deserialize)]\n#[serde(default)]\nstruct HeartbeatConfig {\n    period_secs: u64,\n}\n\n/// Implementing by hand to have non-trivial defaults.\nimpl Default for HeartbeatConfig {\n    fn default() -> Self {\n        Self { period_secs: 3 }\n    }\n}\n"})}),"\n",(0,r.jsx)(t.h3,{id:"startup",children:"Startup"}),"\n",(0,r.jsxs)(t.p,{children:["The startup logic begins (but not necessarily ends) at startup.\nWrite a startup function that emits an incrementing tick event every ",(0,r.jsx)(t.code,{children:"period_secs"})," seconds."]}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-rust",children:'use std::time::Duration;\nuse strut::{AppConfig, AppContext};\n\n/// Implements main logic of the `heartbeat` component. In this case, it emits\n/// an incrementing tick number at regular intervals.\nasync fn heartbeat_startup() {\n    // Create counter\n    let mut counter = 0;\n\n    // Retrieve config\n    let heartbeat_config: HeartbeatConfig = AppConfig::section("heartbeat");\n    let period = Duration::from_secs(heartbeat_config.period_secs);\n\n    // Write heartbeat events repeatedly\n    while AppContext::is_alive() {\n        tokio::time::sleep(period).await;\n        tracing::info!("Tick {}", counter);\n        counter += 1;\n    }\n}\n'})}),"\n",(0,r.jsxs)(t.p,{children:["The function has to be ",(0,r.jsx)(t.code,{children:"async"})," because we want to suspend execution without blocking the thread while we wait for the next tick.\nThings to note here:"]}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.a,{href:"https://docs.rs/strut/latest/strut/struct.AppConfig.html",children:(0,r.jsx)(t.code,{children:"AppConfig"})})," supports arbitrary config structures, which you can request by name."]}),"\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.a,{href:"https://docs.rs/strut/latest/strut/struct.AppContext.html",children:(0,r.jsx)(t.code,{children:"AppContext"})})," allows us to check whether the application is alive, so we can stop ticking when the application is headed for shutdown."]}),"\n"]}),"\n",(0,r.jsx)(t.h3,{id:"spindown",children:"Spindown"}),"\n",(0,r.jsx)(t.p,{children:"The spindown logic gets executed right before the application shuts down.\nWrite a spindown function that emits the total application uptime in seconds right before exiting."}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-rust",children:'use std::time::Instant;\nuse strut::{AppContext, AppSpindown};\n\n/// Implements pre-shutdown logic of the `heartbeat` component. In this case, it\n/// reports the total application uptime.\nasync fn heartbeat_spindown() {\n    // Mark startup time\n    let startup_time = Instant::now();\n\n    // Register for spindown (dropping the token is sufficient to signal completion)\n    let _token = AppSpindown::register("heartbeat");\n\n    // Wait for global application context to terminate\n    AppContext::terminated().await;\n\n    // Report total uptime right before shutdown\n    tracing::info!("Total uptime: {} seconds", startup_time.elapsed().as_secs());\n}\n'})}),"\n",(0,r.jsx)(t.p,{children:"This function is also async because it will spend most of the time waiting for the application to go into spindown.\nThings to note here:"}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsxs)(t.li,{children:["You should register with ",(0,r.jsx)(t.a,{href:"https://docs.rs/strut/latest/strut/struct.AppSpindown.html",children:(0,r.jsx)(t.code,{children:"AppSpindown"})})," early on and keep the returned token."]}),"\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.a,{href:"https://docs.rs/strut/latest/strut/struct.AppContext.html",children:(0,r.jsx)(t.code,{children:"AppContext"})})," allows us to suspend execution until the application context is terminated."]}),"\n"]}),"\n",(0,r.jsx)(t.h3,{id:"main-function",children:"Main function"}),"\n",(0,r.jsxs)(t.p,{children:["The ",(0,r.jsx)(t.code,{children:"#[strut::main]"})," function ties it all up, producing the output similar to the ",(0,r.jsx)(t.a,{href:"#example-heartbeat",children:"above"}),"."]}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-rust",children:"use std::time::Duration;\n\n#[strut::main]\nasync fn main() {\n    // Schedule startup and spindown logic\n    tokio::spawn(heartbeat_startup());\n    tokio::spawn(heartbeat_spindown());\n\n    // Simulate 10 seconds of work\n    tokio::time::sleep(Duration::from_secs(10)).await;\n}\n"})}),"\n",(0,r.jsxs)(n,{children:[(0,r.jsx)("summary",{children:"Full code"}),(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-rust",metastring:'title="main.rs"',children:'use serde::Deserialize;\nuse std::time::{Duration, Instant};\nuse strut::{AppConfig, AppContext, AppSpindown};\n\n#[strut::main]\nasync fn main() {\n    // Schedule startup and spindown logic\n    tokio::spawn(heartbeat_startup());\n    tokio::spawn(heartbeat_spindown());\n\n    // Simulate 10 seconds of work\n    tokio::time::sleep(Duration::from_secs(10)).await;\n}\n\n/// Configuration struct that implements [`Default`] and [`Deserialize`].\n#[derive(Debug, Deserialize)]\n#[serde(default)]\nstruct HeartbeatConfig {\n    period_secs: u64,\n}\n\n/// Implementing by hand to have non-trivial defaults.\nimpl Default for HeartbeatConfig {\n    fn default() -> Self {\n        Self { period_secs: 3 }\n    }\n}\n\n/// Implements main logic of the `heartbeat` component. In this case, it emits\n/// an incrementing tick number at regular intervals.\nasync fn heartbeat_startup() {\n    // Create counter\n    let mut counter = 0;\n\n    // Retrieve config\n    let heartbeat_config: HeartbeatConfig = AppConfig::section("heartbeat");\n    let period = Duration::from_secs(heartbeat_config.period_secs);\n\n    // Write heartbeat events repeatedly\n    while AppContext::is_alive() {\n        tokio::time::sleep(period).await;\n        tracing::info!("Tick {}", counter);\n        counter += 1;\n    }\n}\n\n/// Implements pre-shutdown logic of the `heartbeat` component. In this case, it\n/// reports the total application uptime.\nasync fn heartbeat_spindown() {\n    // Mark startup time\n    let startup_time = Instant::now();\n\n    // Register for spindown (dropping the token is sufficient to signal completion)\n    let _token = AppSpindown::register("heartbeat");\n\n    // Wait for global application context to terminate\n    AppContext::terminated().await;\n\n    // Report total uptime right before shutdown\n    tracing::info!("Total uptime: {} seconds", startup_time.elapsed().as_secs());\n}\n'})})]}),"\n",(0,r.jsx)(t.admonition,{title:"No config?",type:"note",children:(0,r.jsxs)(t.p,{children:["We didn\u2019t provide any runtime configuration, forcing ",(0,r.jsx)(t.a,{href:"https://docs.rs/strut/latest/strut/struct.AppConfig.html",children:(0,r.jsx)(t.code,{children:"AppConfig"})})," to use the default.\nWhat will happen if we run this example with ",(0,r.jsx)(t.code,{children:"APP_HEARTBEAT_PERIODSECS=1 cargo run"}),"?"]})})]})}function h(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(u,{...e})}):u(e)}function m(e,t){throw new Error("Expected "+(t?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}},7077:(e,t,n)=>{n.d(t,{A:()=>a});n(6540);var i=n(4164),r=n(4979),s=n(4848);const o={xs:r.A.sizeXs,s:r.A.sizeS,m:"",l:r.A.sizeL,xl:r.A.sizeXl};function a({children:e,width:t=null,className:n,style:a,fontSize:l=null,lineHeight:c=null,size:d="s",mdx:p=!0,wrap:u=!1}){const h={...a,...t&&{width:t}},m={...l&&{fontSize:l},...c&&{lineHeight:c}};return(0,s.jsxs)("div",{className:(0,i.A)(r.A.terminal,o[d],p&&r.A.terminalMdx,n),style:h,children:[(0,s.jsxs)("div",{className:r.A.terminalHeader,children:[(0,s.jsx)("span",{className:(0,i.A)(r.A.terminalBtn,r.A.terminalButtonRed)}),(0,s.jsx)("span",{className:(0,i.A)(r.A.terminalBtn,r.A.terminalButtonYellow)}),(0,s.jsx)("span",{className:(0,i.A)(r.A.terminalBtn,r.A.terminalButtonGreen)})]}),(0,s.jsx)("pre",{className:(0,i.A)(r.A.terminalCodeBlock,u?r.A.terminalWrap:r.A.terminalNoWrap),style:m,children:e})]})}},8376:(e,t,n)=>{n.d(t,{$f:()=>a,dg:()=>o,tG:()=>l});n(6540);var i=n(4979),r=n(4848);const s=e=>{const t=({children:t})=>(0,r.jsx)("span",{className:e,children:t}),n=e.charAt(0).toUpperCase()+e.slice(1);return t.displayName=`Highlight(${n})`,t},o={Keyword:s(i.A.progKeyword),String:s(i.A.progString),Literal:s(i.A.progLiteral),Function:s(i.A.progFunction),Definition:s(i.A.progDefinition),Property:s(i.A.progProperty),Variable:s(i.A.progVariable),Operator:s(i.A.progOperator),Special:s(i.A.progSpecial),Parameter:s(i.A.progParameter),Comment:s(i.A.progComment),Punctuation:s(i.A.progPunctuation)},a=(s(i.A.markupTag),s(i.A.markupName),s(i.A.markupAttribute),s(i.A.markupValue),s(i.A.markupEntity),s(i.A.markupComment),{Prompt:s(i.A.shellPrompt),Command:s(i.A.shellCommand),Argument:s(i.A.shellArgument),Option:s(i.A.shellOption),String:s(i.A.shellString),Variable:s(i.A.shellVariable),Operator:s(i.A.shellOperator),Output:s(i.A.shellOutput),Comment:s(i.A.shellComment)}),l={Trace:s(i.A.logTrace),Debug:s(i.A.logDebug),Info:s(i.A.logInfo),Notice:s(i.A.logNotice),Success:s(i.A.logSuccess),Warning:s(i.A.logWarning),Error:s(i.A.logError),Fatal:s(i.A.logFatal),Main:s(i.A.logMain),Muted:s(i.A.logMuted),Subdued:s(i.A.logSubdued)}},8453:(e,t,n)=>{n.d(t,{R:()=>o,x:()=>a});var i=n(6540);const r={},s=i.createContext(r);function o(e){const t=i.useContext(s);return i.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),i.createElement(s.Provider,{value:t},e.children)}}}]);