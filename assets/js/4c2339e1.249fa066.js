"use strict";(self.webpackChunkstrut_home=self.webpackChunkstrut_home||[]).push([[671],{1470:(e,n,i)=>{i.d(n,{A:()=>A});var s=i(6540),t=i(4164),r=i(3104),a=i(6347),l=i(205),o=i(7485),c=i(1682),d=i(679);function h(e){return s.Children.toArray(e).filter(e=>"\n"!==e).map(e=>{if(!e||(0,s.isValidElement)(e)&&function(e){const{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)})?.filter(Boolean)??[]}function u(e){const{values:n,children:i}=e;return(0,s.useMemo)(()=>{const e=n??function(e){return h(e).map(({props:{value:e,label:n,attributes:i,default:s}})=>({value:e,label:n,attributes:i,default:s}))}(i);return function(e){const n=(0,c.XI)(e,(e,n)=>e.value===n.value);if(n.length>0)throw new Error(`Docusaurus error: Duplicate values "${n.map(e=>e.value).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e},[n,i])}function f({value:e,tabValues:n}){return n.some(n=>n.value===e)}function g({queryString:e=!1,groupId:n}){const i=(0,a.W6)(),t=function({queryString:e=!1,groupId:n}){if("string"==typeof e)return e;if(!1===e)return null;if(!0===e&&!n)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return n??null}({queryString:e,groupId:n});return[(0,o.aZ)(t),(0,s.useCallback)(e=>{if(!t)return;const n=new URLSearchParams(i.location.search);n.set(t,e),i.replace({...i.location,search:n.toString()})},[t,i])]}function x(e){const{defaultValue:n,queryString:i=!1,groupId:t}=e,r=u(e),[a,o]=(0,s.useState)(()=>function({defaultValue:e,tabValues:n}){if(0===n.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(e){if(!f({value:e,tabValues:n}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${e}" but none of its children has the corresponding value. Available values are: ${n.map(e=>e.value).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return e}const i=n.find(e=>e.default)??n[0];if(!i)throw new Error("Unexpected error: 0 tabValues");return i.value}({defaultValue:n,tabValues:r})),[c,h]=g({queryString:i,groupId:t}),[x,p]=function({groupId:e}){const n=function(e){return e?`docusaurus.tab.${e}`:null}(e),[i,t]=(0,d.Dv)(n);return[i,(0,s.useCallback)(e=>{n&&t.set(e)},[n,t])]}({groupId:t}),m=(()=>{const e=c??x;return f({value:e,tabValues:r})?e:null})();(0,l.A)(()=>{m&&o(m)},[m]);return{selectedValue:a,selectValue:(0,s.useCallback)(e=>{if(!f({value:e,tabValues:r}))throw new Error(`Can't select invalid tab value=${e}`);o(e),h(e),p(e)},[h,p,r]),tabValues:r}}var p=i(2303);const m={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var j=i(4848);function v({className:e,block:n,selectedValue:i,selectValue:s,tabValues:a}){const l=[],{blockElementScrollPositionUntilNextRender:o}=(0,r.a_)(),c=e=>{const n=e.currentTarget,t=l.indexOf(n),r=a[t].value;r!==i&&(o(n),s(r))},d=e=>{let n=null;switch(e.key){case"Enter":c(e);break;case"ArrowRight":{const i=l.indexOf(e.currentTarget)+1;n=l[i]??l[0];break}case"ArrowLeft":{const i=l.indexOf(e.currentTarget)-1;n=l[i]??l[l.length-1];break}}n?.focus()};return(0,j.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,t.A)("tabs",{"tabs--block":n},e),children:a.map(({value:e,label:n,attributes:s})=>(0,j.jsx)("li",{role:"tab",tabIndex:i===e?0:-1,"aria-selected":i===e,ref:e=>{l.push(e)},onKeyDown:d,onClick:c,...s,className:(0,t.A)("tabs__item",m.tabItem,s?.className,{"tabs__item--active":i===e}),children:n??e},e))})}function b({lazy:e,children:n,selectedValue:i}){const r=(Array.isArray(n)?n:[n]).filter(Boolean);if(e){const e=r.find(e=>e.props.value===i);return e?(0,s.cloneElement)(e,{className:(0,t.A)("margin-top--md",e.props.className)}):null}return(0,j.jsx)("div",{className:"margin-top--md",children:r.map((e,n)=>(0,s.cloneElement)(e,{key:n,hidden:e.props.value!==i}))})}function y(e){const n=x(e);return(0,j.jsxs)("div",{className:(0,t.A)("tabs-container",m.tabList),children:[(0,j.jsx)(v,{...n,...e}),(0,j.jsx)(b,{...n,...e})]})}function A(e){const n=(0,p.A)();return(0,j.jsx)(y,{...e,children:h(e.children)},String(n))}},3048:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>d,contentTitle:()=>c,default:()=>f,frontMatter:()=>o,metadata:()=>s,toc:()=>h});const s=JSON.parse('{"id":"config/index","title":"Configuration","description":"[this-feature-config-live]: #feature-config-live","source":"@site/docs/04_config/index.mdx","sourceDirName":"04_config","slug":"/config","permalink":"/docs/config","draft":false,"unlisted":false,"editUrl":"https://github.com/strut-rs/strut-rs.github.io/edit/main/docs/04_config/index.mdx","tags":[],"version":"current","sidebarPosition":4,"frontMatter":{"sidebar_position":4,"slug":"/config","title":"Configuration"},"sidebar":"docs","previous":{"title":"Design","permalink":"/docs/design"},"next":{"title":"Profile","permalink":"/docs/profile"}}');var t=i(4848),r=i(8453),a=i(9365),l=i(1470);const o={sidebar_position:4,slug:"/config",title:"Configuration"},c="Runtime configuration",d={},h=[{value:"Initial vs live",id:"initial-vs-live",level:2},{value:"Cargo features",id:"cargo-features",level:2},{value:"Feature <code>config-async</code>",id:"feature-config-async",level:3},{value:"Feature <code>config-live</code>",id:"feature-config-live",level:3},{value:"Config files",id:"config-files",level:2},{value:"File naming convention",id:"file-naming-convention",level:3},{value:"Slugs (config keys)",id:"slugs-config-keys",level:2},{value:"Environment config",id:"environment-config",level:2}];function u(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"runtime-configuration",children:"Runtime configuration"})}),"\n",(0,t.jsxs)(n.p,{children:["Strut primarily aims to remove chores that stand in the way of writing application logic.\nMost often this comes down to pre-configuring common public crates, such as ",(0,t.jsx)(n.a,{href:"https://crates.io/crates/tracing",children:(0,t.jsx)(n.code,{children:"tracing"})})," or ",(0,t.jsx)(n.a,{href:"https://crates.io/crates/sqlx",children:(0,t.jsx)(n.code,{children:"sqlx"})}),"."]}),"\n",(0,t.jsx)(n.p,{children:"The philosophy of Strut configuration is:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Reasonable defaults for everything.","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"This means minimal configuration is always no configuration at all."}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["Customization through files and environment, including:","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Flexible interpretation of human inputs."}),"\n",(0,t.jsx)(n.li,{children:"Simple and readable naming conventions."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:["The entire configuration is represented by the ",(0,t.jsx)(n.strong,{children:(0,t.jsxs)(n.a,{href:"https://docs.rs/strut/latest/strut/struct.AppConfig.html",children:[(0,t.jsx)(n.code,{children:"AppConfig"})," struct"]})}),", which also acts as a facade (a collection of associated function) for accessing the loaded & parsed configuration.\nStrut uses the ",(0,t.jsx)(n.a,{href:"https://crates.io/crates/config",children:(0,t.jsx)(n.code,{children:"config"})})," crate for loading and parsing."]}),"\n",(0,t.jsx)(n.h2,{id:"initial-vs-live",children:"Initial vs live"}),"\n",(0,t.jsx)(n.p,{children:"Strut maintains two distinct versions of configuration:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Initial"})," configuration is loaded and parsed eagerly on startup.","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Afterward, it remains immutable throughout the lifetime of the application."}),"\n",(0,t.jsxs)(n.li,{children:["Use the ",(0,t.jsx)(n.a,{href:"https://docs.rs/strut/latest/strut/struct.AppConfig.html",children:(0,t.jsx)(n.code,{children:"AppConfig"})})," facade for working with initial config."]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Live"})," configuration may be enabled via the ",(0,t.jsxs)(n.a,{href:"#feature-config-live",children:[(0,t.jsx)(n.code,{children:"config-live"})," feature"]}),".","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"As the name suggests, this configuration may be manually refreshed at any time."}),"\n",(0,t.jsxs)(n.li,{children:["Use the ",(0,t.jsx)(n.a,{href:"https://docs.rs/strut/latest/strut/struct.AppLiveConfig.html",children:(0,t.jsx)(n.code,{children:"AppLiveConfig"})})," facade for working with live config."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.admonition,{title:"Strut uses initial config",type:"warning",children:(0,t.jsx)(n.p,{children:"Currently all Strut components use the initial config implicitly."})}),"\n",(0,t.jsx)(n.h2,{id:"cargo-features",children:"Cargo features"}),"\n",(0,t.jsxs)(n.p,{children:["In the basic form, Strut only loads the initial, synchronous ",(0,t.jsx)(n.code,{children:"AppConfig"})," from the following sources:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.a,{href:"#config-files",children:"Config files"}),"."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.a,{href:"#environment-config",children:"Environment variables"}),"."]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"The following features may be also enabled:"}),"\n",(0,t.jsxs)(n.h3,{id:"feature-config-async",children:["Feature ",(0,t.jsx)(n.code,{children:"config-async"})]}),"\n",(0,t.jsxs)(n.p,{children:["Under the hood Strut uses a ",(0,t.jsx)(n.a,{href:"https://docs.rs/config/latest/config/builder/struct.DefaultState.html",children:"synchronous"})," ",(0,t.jsx)(n.a,{href:"https://docs.rs/config/latest/config/builder/struct.ConfigBuilder.html",children:(0,t.jsx)(n.code,{children:"ConfigBuilder"})}),".\nEnable this feature to switch it to ",(0,t.jsx)(n.a,{href:"https://docs.rs/config/latest/config/builder/struct.AsyncState.html",children:"asynchronous state"}),".\nThen, customize the config builder via a custom ",(0,t.jsx)(n.a,{href:"https://docs.rs/strut/latest/strut/trait.ConfigurationWiring.html",children:(0,t.jsx)(n.code,{children:"ConfigurationWiring"})}),"."]}),"\n",(0,t.jsxs)(n.h3,{id:"feature-config-live",children:["Feature ",(0,t.jsx)(n.code,{children:"config-live"})]}),"\n",(0,t.jsxs)(n.p,{children:["By default, Strut loads and parses the configuration only once (the initial config).\nEnable this feature to gain the ability to refresh the config at any time via the ",(0,t.jsx)(n.a,{href:"https://docs.rs/strut/latest/strut/struct.AppLiveConfig.html",children:(0,t.jsx)(n.code,{children:"AppLiveConfig"})})," facade."]}),"\n",(0,t.jsx)(n.h2,{id:"config-files",children:"Config files"}),"\n",(0,t.jsxs)(n.p,{children:["Strut automatically loads external configuration files from the ",(0,t.jsx)(n.code,{children:"config"})," directory located in the ",(0,t.jsx)(n.a,{href:"https://doc.rust-lang.org/std/env/fn.current_dir.html",children:"current working directory"})," of the running process.\nWhen running the application using Cargo (e.g., ",(0,t.jsx)(n.code,{children:"cargo run"}),") or via an IDE, the ",(0,t.jsx)(n.code,{children:"config"})," directory is taken relative to the crate root (where ",(0,t.jsx)(n.code,{children:"Cargo.toml"})," is located).\nYou can change the ",(0,t.jsx)(n.code,{children:"config"})," directory to any relative or absolute path via ",(0,t.jsx)(n.a,{href:"https://docs.rs/strut/latest/strut/struct.Launchpad.html",children:(0,t.jsx)(n.code,{children:"Launchpad"})}),"."]}),"\n",(0,t.jsx)(n.h3,{id:"file-naming-convention",children:"File naming convention"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Accepted formats/extensions:","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["TOML (",(0,t.jsx)(n.code,{children:"*.toml"}),")."]}),"\n",(0,t.jsxs)(n.li,{children:["YAML (",(0,t.jsx)(n.code,{children:"*.yaml"})," or ",(0,t.jsx)(n.code,{children:"*.yml"}),")."]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Generic"})," files are applied always.","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Pattern: ",(0,t.jsx)(n.code,{children:"config/{any_name}.{ext}"})]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Profile-specific"})," files are applied when the file\u2019s profile matches the ",(0,t.jsx)(n.a,{href:"/docs/profile",children:"active profile"}),".","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Patterns:","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"config/{any_name}.{profile}.{ext}"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"config/{profile}/{any_name}.{ext}"})}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"Within the convention, you can spread the config across arbitrarily named files.\nThese separate key-value maps are merged during loading.\nWhen keys overlap, profile-specific values take precedence."}),"\n",(0,t.jsx)(n.h2,{id:"slugs-config-keys",children:"Slugs (config keys)"}),"\n",(0,t.jsx)(n.p,{children:"Strut strives to be permissive when interpreting user-provided config."}),"\n",(0,t.jsxs)(n.p,{children:["All config slugs in Strut are case-insensitive, and only take ASCII alphanumeric characters into account when matching.\nThis means that slugs like ",(0,t.jsx)(n.code,{children:"map-s"}),", ",(0,t.jsx)(n.code,{children:"MapS"}),", ",(0,t.jsx)(n.code,{children:"maps"}),", and even ",(0,t.jsx)(n.code,{children:"+++MAP_S+++"})," are all identical."]}),"\n",(0,t.jsxs)(n.p,{children:["This matching style applies to all built-in configuration keys and enumeration-style values (e.g., ",(0,t.jsx)(n.code,{children:"blue"}),"/",(0,t.jsx)(n.code,{children:"green"}),", ",(0,t.jsx)(n.code,{children:"error"}),"/",(0,t.jsx)(n.code,{children:"warn"}),"/",(0,t.jsx)(n.code,{children:"info"}),", etc.).\nScalar values like integers or booleans, as well as literal values like file paths are, of course, not slugs."]}),"\n",(0,t.jsxs)(n.admonition,{title:"User-provided slugs",type:"warning",children:[(0,t.jsx)(n.p,{children:"Some components allow user-provided configuration keys.\nAn example would be a list of database connection handles:"}),(0,t.jsxs)(l.A,{children:[(0,t.jsx)(a.A,{value:"YAML",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",metastring:'title="config/database.yaml"',children:"database:\n    mysql:\n        my-database: mysql://username:changeme@example.com:3306/my_database\n        other-database: mysql://username:changeme@example.com:3306/other_database\n"})})}),(0,t.jsx)(a.A,{value:"TOML",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-toml",metastring:'title="config/database.toml"',children:'[database.mysql]\n"my-database" = "mysql://username:changeme@example.com:3306/my_database"\n"other-database" = "mysql://username:changeme@example.com:3306/other_database"\n'})})})]}),(0,t.jsx)(n.p,{children:"Such keys are also slugs."}),(0,t.jsxs)(n.p,{children:["In the example above, ",(0,t.jsx)(n.code,{children:"my-database"})," can be retrieved using ",(0,t.jsx)(n.code,{children:"MyDataBase"})," or any other equivalent slug.\nThis means that using distinct keys that differ only in punctuation (e.g., ",(0,t.jsx)(n.code,{children:"value_a"})," and ",(0,t.jsx)(n.code,{children:"VALUEA"}),") is a logical error (despite being valid YAML/TOML), and will lead to the two keys being squashed together."]})]}),"\n",(0,t.jsx)(n.h2,{id:"environment-config",children:"Environment config"}),"\n",(0,t.jsx)(n.p,{children:"All config key-values can be overwritten via environment variables.\nMatching of environment variable names to config keys happens automatically, using a naming convention:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Always use the ",(0,t.jsx)(n.code,{children:"APP_"})," prefix."]}),"\n",(0,t.jsxs)(n.li,{children:["Squash individual ",(0,t.jsx)(n.a,{href:"#slugs-config-keys",children:"slugs"})," (config keys) into ",(0,t.jsx)(n.code,{children:"SINGLEWORD"}),"."]}),"\n",(0,t.jsxs)(n.li,{children:["Use underscores ",(0,t.jsx)(n.code,{children:"_"})," as slug separators."]}),"\n",(0,t.jsx)(n.li,{children:"Letter case doesn\u2019t really matter, but UPPERCASE is conventional."}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"It is probably easier to learn this by example:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Config key: ",(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.code,{children:"name"})}),".","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Corresponding environment variable: ",(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.code,{children:"APP_NAME"})}),"."]}),"\n",(0,t.jsxs)(n.li,{children:["Just add the ",(0,t.jsx)(n.code,{children:"APP_"})," prefix."]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["Config key: ",(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.code,{children:"tracing.show_file"})}),".","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Corresponding environment variable: ",(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.code,{children:"APP_TRACING_SHOWFILE"})}),"."]}),"\n",(0,t.jsxs)(n.li,{children:["Squash individual ",(0,t.jsx)(n.a,{href:"#slugs-config-keys",children:"slugs"})," (such as ",(0,t.jsx)(n.code,{children:"single_word"}),") into ",(0,t.jsx)(n.code,{children:"SINGLEWORD"}),"."]}),"\n",(0,t.jsxs)(n.li,{children:["Replace dot separators ",(0,t.jsx)(n.code,{children:"."})," with underscores ",(0,t.jsx)(n.code,{children:"_"}),"."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"A few more examples:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"database.url"})," -> ",(0,t.jsx)(n.code,{children:"APP_DATABASE_URL"}),"."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"database.mysql.some_handle.pool.idle_timeout"})," -> ",(0,t.jsx)(n.code,{children:"APP_DATABASE_MYSQL_SOMEHANDLE_POOL_IDLETIMEOUT"}),"."]}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:["Strut optionally reads environment defaults from the ",(0,t.jsx)(n.code,{children:".env"})," and ",(0,t.jsx)(n.code,{children:".env.local"})," files in the same place as it ",(0,t.jsx)(n.a,{href:"#config-files",children:"looks"})," for the ",(0,t.jsx)(n.code,{children:"config"})," directory.\nConventionally, ",(0,t.jsx)(n.code,{children:".env"})," is committed to the version control system, but ",(0,t.jsx)(n.code,{children:".env.local"})," is not."]}),"\n",(0,t.jsxs)(n.p,{children:["You can customize the naming convention for environment variables (and disable environment config altogether) via ",(0,t.jsx)(n.a,{href:"https://docs.rs/strut/latest/strut/struct.Launchpad.html",children:(0,t.jsx)(n.code,{children:"Launchpad"})}),"."]})]})}function f(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(u,{...e})}):u(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>a,x:()=>l});var s=i(6540);const t={},r=s.createContext(t);function a(e){const n=s.useContext(r);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:a(e.components),s.createElement(r.Provider,{value:n},e.children)}},9365:(e,n,i)=>{i.d(n,{A:()=>a});i(6540);var s=i(4164);const t={tabItem:"tabItem_Ymn6"};var r=i(4848);function a({children:e,hidden:n,className:i}){return(0,r.jsx)("div",{role:"tabpanel",className:(0,s.A)(t.tabItem,i),hidden:n,children:e})}}}]);